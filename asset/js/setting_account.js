// ƒê·ª£i cho ƒë·∫øn khi to√†n b·ªô trang t·∫£i xong m·ªõi th·ª±c thi code
document.addEventListener("DOMContentLoaded", function () {
  // L·∫•y c√°c tham s·ªë t·ª´ URL
  const params = new URLSearchParams(window.location.search);

  // X√°c ƒë·ªãnh tab ƒëang ƒë∆∞·ª£c ch·ªçn, ∆∞u ti√™n theo th·ª© t·ª±:
  // 1. L·∫•y t·ª´ URL (?tab=xxx)
  // 2. L·∫•y t·ª´ localStorage (l∆∞u l·∫°i l·∫ßn ch·ªçn tr∆∞·ªõc)
  // 3. N·∫øu kh√¥ng c√≥ th√¨ m·∫∑c ƒë·ªãnh l√† "userInfo"
  const activeTab =
    params.get("tab") || localStorage.getItem("activeTab") || "userInfo";

  // ƒê·ªëi t∆∞·ª£ng ch·ª©a c√°c ph·∫ßn n·ªôi dung (c√°c tab) trong giao di·ªán
  const sections = {
    senderInfo: document.getElementById("senderInfoSettings"), // Th√¥ng tin ng∆∞·ªùi g·ª≠i
    userInfo: document.getElementById("userInfoSection"), // Th√¥ng tin t√†i kho·∫£n
    transactionHistory: document.getElementById("transactionHistory"), // L·ªãch s·ª≠ giao d·ªãch
  };

  // ƒê·ªëi t∆∞·ª£ng ch·ª©a c√°c n√∫t b·∫•m ƒëi·ªÅu h∆∞·ªõng gi·ªØa c√°c tab
  const buttons = {
    senderInfo: document.getElementById("toggleSenderInfo"), // N√∫t "C√†i ƒë·∫∑t th√¥ng tin ng∆∞·ªùi g·ª≠i"
    userInfo: document.getElementById("toggleUserInfo"), // N√∫t "Th√¥ng tin t√†i kho·∫£n"
    transactionHistory: document.getElementById("toggleTransactionHistory"), // N√∫t "ƒê·ªïi m·∫≠t kh·∫©u"
  };

  // H√†m hi·ªÉn th·ªã tab ƒë∆∞·ª£c ch·ªçn v√† ·∫©n t·∫•t c·∫£ tab kh√°c
  function showActiveTab(tab) {
    // ·∫®n t·∫•t c·∫£ n·ªôi dung c·ªßa c√°c tab
    Object.values(sections).forEach(
      (section) => (section.style.display = "none")
    );

    // X√≥a class "active-tab" kh·ªèi t·∫•t c·∫£ c√°c n√∫t b·∫•m
    Object.values(buttons).forEach((btn) => btn.classList.remove("active-tab"));

    // N·∫øu tab h·ª£p l·ªá (t·ªìn t·∫°i trong sections v√† buttons)
    if (sections[tab] && buttons[tab]) {
      sections[tab].style.display = "block"; // Hi·ªÉn th·ªã tab ƒëang ch·ªçn
      buttons[tab].classList.add("active-tab"); // ƒê√°nh d·∫•u tab ƒëang ch·ªçn l√† "active"
      localStorage.setItem("activeTab", tab); // L∆∞u tab ƒëang ch·ªçn v√†o localStorage
    }
  }

  // Th√™m s·ª± ki·ªán "click" cho t·ª´ng n√∫t b·∫•m ƒë·ªÉ thay ƒë·ªïi tab khi nh·∫•n v√†o
  Object.keys(buttons).forEach((tab) => {
    if (buttons[tab]) {
      buttons[tab].addEventListener("click", function (event) {
        event.preventDefault(); // NgƒÉn ch·∫∑n h√†nh vi m·∫∑c ƒë·ªãnh c·ªßa th·∫ª <a>
        showActiveTab(tab); // Hi·ªÉn th·ªã tab ƒë∆∞·ª£c ch·ªçn
      });
    }
  });

  // N·∫øu c√≥ ph·∫ßn t·ª≠ "manageSenderInfo", th√™m s·ª± ki·ªán click ƒë·ªÉ l∆∞u tab "senderInfo" v√†o localStorage
  if (document.getElementById("manageSenderInfo")) {
    document
      .getElementById("manageSenderInfo")
      .addEventListener("click", function () {
        localStorage.setItem("activeTab", "senderInfo");
      });
  }

  // Hi·ªÉn th·ªã tab ƒë√£ l∆∞u ho·∫∑c tab m·∫∑c ƒë·ªãnh khi trang t·∫£i l√™n
  showActiveTab(activeTab);

  // N·∫øu URL ch·ª©a tham s·ªë "?tab=xxx", x√≥a n√≥ ƒëi ƒë·ªÉ gi·ªØ URL s·∫°ch h∆°n
  if (params.has("tab")) {
    window.history.replaceState({}, document.title, window.location.pathname);
  }
});

// duy·ªát m·ªü t·∫•t c·∫£ modal
document.addEventListener("DOMContentLoaded", function () {
  const editButtons = document.querySelectorAll(".btnAction"); // L·∫•y t·∫•t c·∫£ n√∫t c√≥ class .btnAction
  const editModal = new bootstrap.Modal(
    document.getElementById("editWarehouse")
  ); // Modal c·∫ßn m·ªü

  editButtons.forEach(function (button) {
    button.addEventListener("click", function () {
      editModal.show();
    });
  });
});

//·∫©n hi·ªán password
function togglePassword(inputId) {
  var input = document.getElementById(inputId);
  var icon = event.currentTarget; // L·∫•y ch√≠nh button ƒë∆∞·ª£c click

  if (input.type === "password") {
    input.type = "text";
    icon.classList.remove("fa-eye");
    icon.classList.add("fa-eye-slash"); // ƒê·ªïi icon th√†nh "·∫©n"
  } else {
    input.type = "password";
    icon.classList.remove("fa-eye-slash");
    icon.classList.add("fa-eye"); // ƒê·ªïi icon th√†nh "hi·ªán"
  }
}

//m·ªü modal nh·∫≠p l·∫°i mk cho email
document.getElementById("openModalBtn").addEventListener("click", function () {
  var myModal = new bootstrap.Modal(
    document.getElementById("confirmOtpEmailOrPhone")
  );
  myModal.show();
});
//m·ªü modal nh·∫≠p l·∫°i mk cho sdt
document
  .getElementById("openModalBtnSDT")
  .addEventListener("click", function () {
    var myModal = new bootstrap.Modal(document.getElementById("confirmPhone"));
    myModal.show();
  });

// r√†ng bu·ªôc mk m·ªõi
function validatePassword() {
  let passwordInput = document.getElementById("newPassword"); // ‚úÖ Th√™m d√≤ng n√†y
  let password = passwordInput.value;
  let errorField = document.getElementById("password_error");
  let errors = [];

  if (password.length < 8) {
    errors.push("M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 8 k√Ω t·ª±.");
  }
  if (!/[A-Z]/.test(password)) {
    errors.push("M·∫≠t kh·∫©u ph·∫£i ch·ª©a √≠t nh·∫•t m·ªôt ch·ªØ in hoa.");
  }
  if (!/[!@#$%^&*()_+\-=\[\]{};':\"\\|,.<>\/?]/.test(password)) {
    errors.push("M·∫≠t kh·∫©u ph·∫£i ch·ª©a √≠t nh·∫•t m·ªôt k√Ω t·ª± ƒë·∫∑c bi·ªát (!@#$%^&*).");
  }

  if (errors.length > 0) {
    errorField.innerHTML = errors.join("<br>");
    setTimeout(() => passwordInput.focus(), 0); // ‚úÖ D√πng setTimeout ƒë·ªÉ ƒë·∫£m b·∫£o focus ho·∫°t ƒë·ªông
    return false;
  }

  errorField.textContent = "";
  return true;
}

function validatePhoneNumber() {
  let phoneInput = document.getElementById("so_dien_thoai");
  let errorSpan = document.getElementById("phoneError");
  let saveButton = document.getElementById("saveSDTBtn");
  let phonePattern = /^0\d{9,10}$/; // S·ªë ƒëi·ªán tho·∫°i ph·∫£i c√≥ 10-11 s·ªë, b·∫Øt ƒë·∫ßu b·∫±ng 0

  if (!phonePattern.test(phoneInput.value.trim())) {
    errorSpan.innerHTML =
      "üì± S·ªë ƒëi·ªán tho·∫°i ph·∫£i c√≥ <b>10-11 s·ªë</b> v√† b·∫Øt ƒë·∫ßu b·∫±ng <b>0</b>!";
    saveButton.disabled = true; // V√¥ hi·ªáu h√≥a n√∫t n·∫øu email kh√¥ng h·ª£p l·ªá
    return false;
  } else {
    errorSpan.innerHTML = "";
    saveButton.disabled = false;
    return true;
  }
}

function validateGmail() {
  let emailInput = document.getElementById("email");
  let errorSpan = document.getElementById("emailError");
  let saveButton = document.getElementById("saveEmailBtn");
  let emailPattern = /^[a-zA-Z0-9._%+-]+@gmail\.com$/;

  if (!emailPattern.test(emailInput.value.trim())) {
    errorSpan.innerHTML = "üìß Email ph·∫£i c√≥ ƒë·ªãnh d·∫°ng <b>@gmail.com</b>!";
    saveButton.disabled = true; // V√¥ hi·ªáu h√≥a n√∫t n·∫øu email kh√¥ng h·ª£p l·ªá
    return false;
  } else {
    errorSpan.innerHTML = "";
    saveButton.disabled = false; // K√≠ch ho·∫°t n√∫t n·∫øu email h·ª£p l·ªá
    return true;
  }
}
